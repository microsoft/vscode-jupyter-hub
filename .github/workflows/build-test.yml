on:
  pull_request:
    branches:
      - main
      - 'release'
      - 'release/*'
      - 'release-*'
  check_run:
    types: [rerequested, requested_action]
  push:
    branches:
      - main
      - 'release'
      - 'release/*'
      - 'release-*'
  workflow_dispatch:

env:
  NODE_VERSION: 18.15.0
  NPM_VERSION: 8.15.1
  PYTHON_VERSION: '3.10'

jobs:
  cancel_previous_runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node ${{env.NODE_VERSION}}
      uses: actions/setup-node@v3
      with:
       node-version: ${{env.NODE_VERSION}}
    - name: Use Npm ${{env.NPM_VERSION}}
      run: npm i -g npm@${{env.NPM_VERSION}}
    - run: npm i -g @vscode/vsce
    - run: npm ci
    - run: npm run package
    - uses: actions/upload-artifact@v3
      with:
        name: 'ms-toolsai-jupyter-hub-insiders.vsix'
        path: 'ms-toolsai-jupyter-hub-insiders.vsix'

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node ${{env.NODE_VERSION}}
      uses: actions/setup-node@v3
      with:
       node-version: ${{env.NODE_VERSION}}
    - name: Use Npm ${{env.NPM_VERSION}}
      run: npm i -g npm@${{env.NPM_VERSION}}
    - run: npm ci
    - run: npm run lint

  tests:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node ${{env.NODE_VERSION}}
      uses: actions/setup-node@v3
      with:
       node-version: ${{env.NODE_VERSION}}
    - name: Use Python ${{env.PYTHON_VERSION}}
      uses: actions/setup-python@v4
      with:
       python-version: ${{env.PYTHON_VERSION}}
    - name: Use Npm ${{env.NPM_VERSION}}
      run: npm i -g npm@${{env.NPM_VERSION}}
    - run: npm i -g @vscode/vsce
    - run: npm ci
    - run: npm run esbuild-base-node
    - run: npm run test-compile
    - run: python -m pip install jupyterhub jupyter-core jupyterlab
    - run: npm i -g configurable-http-proxy
    - run: xvfb-run -a npm test
      if: runner.os == 'Linux'
    # - run: npm test
    #   if: runner.os != 'Linux'

  webtest:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node ${{env.NODE_VERSION}}
      uses: actions/setup-node@v3
      with:
       node-version: ${{env.NODE_VERSION}}
    - name: Use Python ${{env.PYTHON_VERSION}}
      uses: actions/setup-python@v4
      with:
       python-version: ${{env.PYTHON_VERSION}}
    - name: Use Npm ${{env.NPM_VERSION}}
      run: npm i -g npm@${{env.NPM_VERSION}}
    - run: npm i -g @vscode/vsce
    - run: npm ci
    - run: npm run esbuild-base-web
    - run: npm run test-compile
    - run: npm run make-extension-pack-for-web-tests
    - run: npm run test-compile-webpack
    - run: python -m pip install jupyterhub jupyter-core jupyterlab
    - run: npm i -g configurable-http-proxy
    - run: xvfb-run -a npm run test:web:ci
      if: runner.os == 'Linux'
    # - run: npm test
    #   if: runner.os != 'Linux'
